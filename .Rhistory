library(knitr)
knit2html('PA1_template.Rmd')
knit2html('PA1_template.Rmd')
data <- read.csv('activity.csv', stringsAsFactors = FALSE)
data$minutes <- 0   # a new minutes past midnight column
dayblock <- 5 * 0:287
newcol <- c(dayblock)
for (i in 2:length(unique(data$date))) {
newcol <- c(newcol, dayblock)
}
data$minutes <- newcol  # append this new column
# Extract the complete data
dat <- subset(data, !is.na(steps))  # subset out all the complete data
data$minutes <- 0   # a new minutes past midnight column
dayblock <- 5 * 0:287
newcol <- c(dayblock)
for (i in 2:length(unique(data$date))) {
newcol <- c(newcol, dayblock)
}
data$minutes <- newcol  # append this new column
# Extract the complete data
dat <- subset(data, !is.na(steps))  # subset out all the complete data
library(ggplot2)
day_steps <- data.frame(character(), numeric(), stringsAsFactors=FALSE)
for (day in unique(dat$date)) {
this_sum <- sum(subset(dat, date == day,
select = c(date, steps))$steps)
this_row <- data.frame(day, this_sum, stringsAsFactors=FALSE)
day_steps <- rbind(day_steps, this_row)
}
colnames(day_steps) <- c("date", "total_steps")
qplot(x = total_steps, data = day_steps,
main = "Histogram of the Total # of Steps per Day",
xlab = "# Steps per Day",
ylab = "# Days",
) + geom_histogram(colour = "blue",
fill = "green") + scale_y_continuous(breaks = c(0:40))
library(ggplot2)
day_steps <- data.frame(character(), numeric(), stringsAsFactors=FALSE)
for (day in unique(dat$date)) {
this_sum <- sum(subset(dat, date == day,
select = c(date, steps))$steps)
this_row <- data.frame(day, this_sum, stringsAsFactors=FALSE)
day_steps <- rbind(day_steps, this_row)
}
colnames(day_steps) <- c("date", "total_steps")
qplot(x = total_steps, data = day_steps,
main = "Histogram of the Total # of Steps per Day",
xlab = "# Steps per Day",
ylab = "# Days",
) + geom_histogram(colour = "blue",
fill = "green") + scale_y_continuous(breaks = c(0:40))
mean_steps = mean(day_steps$total_steps)
median_steps = median(day_steps$total_steps)
# Mean
mean_steps
# Median
median_steps
interval_means <- data.frame(minutes = numeric(), mean_steps = numeric())
for (minute in unique(dat$minutes)) {
this_mean <- mean(subset(dat, minutes == minute,
select = c(minutes, steps))$steps)
interval_means <- rbind(interval_means, c(minute, this_mean))
}
colnames(interval_means) <- c("minutes", "mean_steps")
plot(interval_means$minutes, interval_means$mean_steps, type="l",
xlab="Minutes", ylab="Ave # Steps",
main="Average Steps Per 5-Minute Interval")
max_steps <- max(interval_means$mean_steps)
max_activity_time <- subset(interval_means, mean_steps == max_steps,
select = minutes)$minutes
max_steps
num_NA <- nrow(data) - nrow(dat)
data_imp = data
for (i in c(1:nrow(data_imp))) {
if (is.na(data_imp[i, 1])) {
data_imp[i, 1] <- interval_means[interval_means$minutes == data_imp[i, 4], 2]
}
}
data_imp = data
for (i in c(1:nrow(data_imp))) {
if (is.na(data_imp[i, 1])) {
data_imp[i, 1] <- interval_means[interval_means$minutes == data_imp[i, 4], 2]
}
}
day_steps_imp <- data.frame(character(), numeric(), stringsAsFactors=FALSE)
for (day in unique(data_imp$date)) {
this_sum <- sum(subset(data_imp, date == day,
select = c(date, steps))$steps)
this_row <- data.frame(day, this_sum, stringsAsFactors=FALSE)
day_steps_imp <- rbind(day_steps_imp, this_row)
}
colnames(day_steps_imp) <- c("date", "total_steps")
qplot(x = total_steps, data = day_steps_imp,
main = "Histogram of the Total # of Steps per Day with Imputed NAs",
xlab = "# Steps per Day",
ylab = "# Days",
) + geom_histogram(colour = "blue",
fill = "green") + scale_y_continuous(breaks = c(0:40))
# Mean and median:
mean_steps_imp = mean(day_steps_imp$total_steps)
median_steps_imp = median(day_steps_imp$total_steps)
#
# Mean
mean_steps_imp
# Median
median_steps_imp
data_imp$day_type <- 'weekday'
weekend <- (weekdays(as.Date(data_imp$date)) == 'Saturday') |
(weekdays(as.Date(data_imp$date)) == 'Sunday')
data_imp[weekend, 5] <- 'weekend'
data_imp$day_type <- as.factor(data_imp$day_type)
data_imp$day_type <- 'weekday'
weekend <- (weekdays(as.Date(data_imp$date)) == 'Saturday') |
(weekdays(as.Date(data_imp$date)) == 'Sunday')
data_imp[weekend, 5] <- 'weekend'
data_imp$day_type <- as.factor(data_imp$day_type)
week_day <- data_imp$day_type == 'weekday'
dat_weekday <- data_imp[week_day, ]    # extract weekday data
dat_weekend <- data_imp[!week_day, ]   # extract weekend data
# Initialize a new dataframe
interval_weekday_means <- data.frame(minutes=numeric(), mean_steps=numeric())
for (minute in unique(dat_weekday$minutes)) {
this_mean <- mean(subset(dat_weekday, minutes == minute,
select = c(minutes, steps))$steps)
interval_weekday_means <- rbind(interval_weekday_means, c(minute, this_mean))
}
colnames(interval_weekday_means) <- c("minutes", "mean_steps")
interval_weekend_means <- data.frame(minutes=numeric(), mean_steps=numeric())
for (minute in unique(dat_weekend$minutes)) {
this_mean <- mean(subset(dat_weekend, minutes == minute,
select = c(minutes, steps))$steps)
interval_weekend_means <- rbind(interval_weekend_means, c(minute, this_mean))
}
colnames(interval_weekend_means) <- c("minutes", "mean_steps")
minY = min(interval_weekend_means$mean_steps, interval_weekday_means$mean_steps)
maxY = max(interval_weekend_means$mean_steps, interval_weekday_means$mean_steps)
par(mfrow=c(2, 1))
plot(interval_weekday_means$minutes, interval_weekday_means$mean_steps, type="l",
ylim = c(minY, maxY),
xlab = "Minutes", ylab = "Ave # Steps",
main = "Weekday Average Steps Per 5-Minute Interval")
plot(interval_weekend_means$minutes, interval_weekend_means$mean_steps, type="l",
ylim = c(minY, maxY),
xlab = "Minutes", ylab = "Ave # Steps",
main = "Weekend Average Steps Per 5-Minute Interval")
weekday_mean <- mean(interval_weekday_means$mean_steps)
weekend_mean <- mean(interval_weekend_means$mean_steps)
# Mean
weekday_mean
# Median
weekend_mean
knit2html('PA1_template.Rmd')
knit2html('PA1_template.Rmd')
knit2html('PA1_template.Rmd')
